Finagle + Thrift + Scrooge + Zookeeper

1.添加Maven依赖
	
	<!-- finagle-thrift -->
	<dependency>
		<groupId>com.twitter</groupId>
		<artifactId>finagle-thrift_${scala.version}</artifactId>
		<version>${finagle.version}</version>
	</dependency>
	
	<!-- zookeeper -->
    <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-serversets_${scala.version}</artifactId>
        <version>${finagle.version}</version>
    </dependency>
    
2.配置scrooge-maven-plugin

	<!-- 根据IDL（*.thrift）生成代码 -->
	<plugin>
		<groupId>com.twitter</groupId>
		<artifactId>scrooge-maven-plugin</artifactId>
		<version>${finagle.version}</version>
		<configuration>
			<outputDirectory>src/main/thrift-gen</outputDirectory>
			<language>java</language> <!-- default is scala -->
			<thriftOpts>
				<!-- add other Scrooge command line options using thriftOpts -->
				<thriftOpt>--finagle</thriftOpt>
			</thriftOpts>
			<!-- tell scrooge to not to build the extracted thrift files (defaults to true) -->
			<buildExtractedThrift>false</buildExtractedThrift>
		</configuration>
		<executions>
			<execution>
				<id>thrift-sources</id>
				<phase>generate-sources</phase>
				<goals>
					<goal>compile</goal>
				</goals>
			</execution>
			<execution>
				<id>thrift-test-sources</id>
				<phase>generate-test-sources</phase>
				<goals>
					<goal>testCompile</goal>
				</goals>
			</execution>
		</executions>
	</plugin>
	
	以上1、2步骤见：/test-finagle/pom.xml

3.编写IDL文件：/test-finagle/src/main/thrift/*.thrift

4.运行maven instal，在generate-sources阶段，Scrooge就会根据IDL文件自动生成Java代码

5.编写Server：/test-finagle/src/main/java/cn/sam/test/finagle/thrift_zk/ThriftServer.java
	包括服务接口的实现、实现类对象转换成Finagle Service、创建并配置ListeningServer、发布至Zookeeper等
	
6.编写Client：/test-finagle/src/main/java/cn/sam/test/finagle/thrift_zk/ThriftClient.java
	包括初始化并配置Client、读取Zookeeper并创建Service、Service应用Filter、Service转换成具体接口、方法远程调用等
	
	